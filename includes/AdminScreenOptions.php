<?php

/**
 * Admin Screen Options Class
 * 
 * This class defines and handles the administration screen options for the Escrowtics plugin. 
 * It allows for customizing the columns displayed in the Escrowtics admin pages.
 *
 * @since      1.0.0
 * @package    Escrowtics
 * @namespace  Escrowtics
 */

namespace Escrowtics;

// Exit if accessed directly to prevent unauthorized access.
defined('ABSPATH') || exit;

class AdminScreenOptions {

    /**
     * The slug of the admin page to which screen options will be applied.
     *
     * @var string
     */
    public $admin_page = 'toplevel_page_escrowtics-escrows';

    /**
     * Registers the screen options for the admin page.
     *
     * Hooks into WordPress actions and filters to enable screen options.
     *
     * @return void
     */
    public function register() {
        add_action("load-$this->admin_page", [$this, 'registerOptions']);
        add_filter('screen_settings', [$this, 'showScreenOptions'], 10, 2);
    }

    /**
     * Defines the available screen options.
     *
     * These options represent the table columns that can be shown or hidden.
     *
     * @return array List of option names.
     */
    public function options() {
        return [
            'ref',     // Reference column
            'earner',  // Earner column
            'payer',   // Payer column
            'created'  // Creation date column
        ];
    }

    /**
     * Builds an array of screen options with associated titles.
     *
     * Titles are generated by converting option names to human-readable format.
     *
     * @return array List of options with their titles.
     */
    private function screenOptions() {
        $screen_options = [];

        foreach ($this->options() as $option_name) {
            $screen_options[] = [
                'option' => $option_name,
                'title'  => ucwords(strtr($option_name, ['_' => ' '])), // Converts 'option_name' to 'Option Name'
            ];
        }

        return $screen_options;
    }

    /**
     * Registers the screen options for the current admin page.
     *
     * Adds screen options to the admin page's screen object.
     *
     * @return void
     */
    public function registerOptions() {
        $screen = get_current_screen();

        // Ensure the current screen matches the target admin page.
        if (!is_object($screen) || $this->admin_page !== $screen->id) {
            return;
        }

        // Loop through options and add them as screen options.
        foreach ($this->options() as $option_name) {
            add_screen_option("escrot_so_$option_name", [
                'option' => $option_name,
                'value'  => true,
            ]);
        }
    }

    /**
     * Displays a single screen option as a checkbox.
     *
     * @param string $title  The title of the option.
     * @param string $option The option name.
     *
     * @return void
     */
    public function showOption($title, $option) {
        $screen = get_current_screen();
        $id = "escrot_so_$option";

        // Check if the option is enabled.
        $checked = $screen->get_option($id, 'value') ? 'checked' : '';

        // Output the checkbox HTML.
        echo '<label for="' . esc_attr($id) . '">
                <input type="checkbox" name="escrot_so[' . esc_attr($option) . ']" class="escrot-so" id="' . esc_attr($id) . '" ' . esc_attr($checked) . ' />
                ' . esc_html__($title, 'escrowtics') . '
            </label>';
    }

    /**
     * Renders the screen options block in the admin interface.
     *
     * This block contains all the available screen options as checkboxes.
     *
     * @param string $status Current screen settings content.
     * @param object $args   Screen object with details of the current screen.
     *
     * @return string Modified screen settings content.
     */
    public function showScreenOptions($status, $args) {
        // Ensure the current screen matches the target admin page.
        if ($this->admin_page !== $args->base) {
            return $status;
        }

        // Start output buffering to capture HTML.
        ob_start();

        echo '<h4 class="text-light">' . esc_html__('Escrowtics Transactions Screen Options (Hide/Show Table Columns)', 'escrowtics') . '</h4>';

        // Render each screen option as a checkbox.
        foreach ($this->screenOptions() as $screen_option) {
            $this->showOption($screen_option['title'], $screen_option['option']);
        }

        // Return the generated HTML.
        return ob_get_clean();
    }
}
